export declare const MAINNET_ESPLORA_BASE_PATH = "https://btc-mainnet.gobob.xyz";
export declare const TESTNET_ESPLORA_BASE_PATH = "https://btc-testnet.gobob.xyz";
export declare const REGTEST_ESPLORA_BASE_PATH = "http://localhost:3003";
export interface MerkleProof {
    blockHeight: number;
    merkle: string;
    pos: number;
}
export interface UTXO {
    txid: string;
    vout: number;
    value: number;
    confirmed: boolean;
    height?: number;
}
export interface ElectrsClient {
    getBlockHash(height: number): Promise<string>;
    getBlockHeader(hash: string): Promise<string>;
    getTransactionHex(txId: string): Promise<string>;
    getMerkleProof(txId: string): Promise<MerkleProof>;
    getFeeEstimate(confirmationTarget: number): Promise<number>;
    getAddressUtxos(address: string): Promise<Array<UTXO>>;
    broadcastTx(txHex: string): Promise<string>;
}
export declare class DefaultElectrsClient implements ElectrsClient {
    private basePath;
    constructor(networkOrUrl?: string);
    getBlockHash(height: number): Promise<string>;
    getBlockHeader(hash: string): Promise<string>;
    getBlockHeaderAt(height: number): Promise<string>;
    getTransactionHex(txId: string): Promise<string>;
    getMerkleProof(txId: string): Promise<MerkleProof>;
    getFeeEstimate(confirmationTarget: number): Promise<number>;
    getAddressUtxos(address: string, confirmed?: boolean): Promise<Array<UTXO>>;
    broadcastTx(txHex: string): Promise<string>;
    getJson<T>(url: string): Promise<T>;
    getText(url: string): Promise<string>;
}
