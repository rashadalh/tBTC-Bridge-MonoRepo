/// <reference types="node" />
import * as bitcoin from "bitcoinjs-lib";
import { RemoteSigner } from "./signer";
import { CommitTxData } from "./commit";
export interface CommitTxResult {
    tx: bitcoin.Transaction;
    outputIndex: number;
    outputAmount: number;
}
export declare function createRevealTx(network: bitcoin.Network, commitTxData: CommitTxData, commitTxResult: CommitTxResult, toAddress: string, amount: number): bitcoin.Psbt;
export declare const customFinalizer: (commitTxData: CommitTxData) => (inputIndex: number, input: any) => {
    finalScriptWitness: Buffer;
};
export declare function signRevealTx(signer: RemoteSigner, commitTxData: CommitTxData, psbt: bitcoin.Psbt): Promise<bitcoin.Transaction>;
